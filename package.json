{
  "name": "tamagui-monorepo",
  "private": true,
  "version": "0.0.0",
  "repository": {
    "url": "https://github.com/tamagui/tamagui"
  },
  "workspaces": [
    "./code/bento",
    "./code/compiler/**/*",
    "./code/core/**/*",
    "./code/demos",
    "./code/integration",
    "./code/kitchen-sink",
    "./code/next-site",
    "./code/ooo",
    "./code/packages/**/*",
    "./code/takeout",
    "./code/tamagui.dev",
    "./code/ui/**/*"
  ],
  "packageManager": "yarn@4.3.1",
  "scripts": {
    "ooo": "yarn workspace testing dev:clean",
    "ooo:build": "yarn workspace @tamagui/ooo build:prod",
    "ooo:prod": "yarn ooo:build && yarn ooo:serve",
    "ooo:serve": "yarn workspace @tamagui/ooo serve",
    "takeout": "yarn workspace @tamagui/takeout dev",
    "takeout:build": "yarn workspace @tamagui/takeout build:prod",
    "takeout:prod": "yarn takeout:build && yarn takeout:serve",
    "takeout:serve": "yarn workspace @tamagui/takeout serve",
    "build:app": "./scripts/ci-build-app.sh",
    "dev": "yarn workspace @tamagui/dot-dev dev:clean",
    "dev:extract": "TAMAGUI_EXTRACT=1 yarn workspace @tamagui/dot-dev dev:clean",
    "dev:build": "yarn workspace @tamagui/dot-dev build:prod",
    "dev:serve": "yarn workspace @tamagui/dot-dev serve",
    "dev:serve:railway": "yarn workspace @tamagui/dot-dev serve:railway",
    "dev:prod": "yarn dev:build && yarn dev:serve",
    "dev:prod-only-homepage": "yarn dev:build --only index && yarn dev:serve",
    "postinstall": "./scripts/unlock-repo.sh",
    "build:force": "yarn clean:build && yarn build --force",
    "build:js": "./scripts/ensure-unlocked.sh && turbo run build --no-cache --force -- --skip-types",
    "build:types": "SKIP_JS=1 yarn build",
    "build": "turbo run build --filter=!next-app",
    "build:verbose": "yarn build -vvv",
    "docker:build": "dotenv -e .env -- sh -c 'docker build --progress=plain --build-arg TRANSCRYPT_PASSWORD=$TRANSCRYPT_PASSWORD --build-arg SHOULD_UNLOCK_GIT_CRYPT=$SHOULD_UNLOCK_GIT_CRYPT -t my-app .'",
    "docker:run": "dotenv -e .env -- sh -c 'docker run -it -p 3000:3000 my-app'",
    "docker:build-and-run": "yarn docker:build && yarn docker:run",
    "check": "manypkg check",
    "ci": "yarn && yarn check && yarn lint && yarn typecheck && yarn build && yarn test",
    "clean:build": "turbo run clean:build",
    "clean:ts": "tsc -b --clean tsconfig.build.json",
    "clean": "turbo run clean:build",
    "fix": "yarn lint:fix",
    "fix:deps": "yarn manypkg fix",
    "kitchen-sink:build:android": "yarn workspace @tamagui/kitchen-sink android",
    "kitchen-sink:build:ios": "yarn workspace @tamagui/kitchen-sink ios",
    "kitchen-sink:android": "yarn workspace @tamagui/kitchen-sink start:android",
    "kitchen-sink:clean": "yarn workspace @tamagui/kitchen-sink start:clean",
    "kitchen-sink:extract": "yarn workspace @tamagui/kitchen-sink start:extract",
    "kitchen-sink:web": "yarn workspace @tamagui/kitchen-sink web",
    "kitchen-sink": "yarn workspace @tamagui/kitchen-sink start",
    "kitchen-sink:prod": "yarn workspace @tamagui/kitchen-sink start:prod",
    "lighthouse:live": "npx lighthouse https://tamagui.dev --view --chrome-flags='--headless' --throttling.cpuSlowdownMultiplier=16 --output-path=/tmp/report.html",
    "lighthouse:prod": "npx lighthouse http://localhost:3333 --view --chrome-flags='--headless' --throttling.cpuSlowdownMultiplier=16 --output-path=/tmp/report.html",
    "lighthouse:vite:prod": "npx lighthouse http://localhost:8080 --view --chrome-flags='--headless' --throttling.cpuSlowdownMultiplier=16 --output-path=/tmp/report.html",
    "lighthouse": "npx lighthouse http://localhost:3000 --view --chrome-flags='--headless' --throttling.cpuSlowdownMultiplier=16 --output-path=/tmp/report.html",
    "lint:fix": "ultra -r --no-pretty lint:fix && yarn lint:eslint --fix",
    "lint": "ultra -r --no-pretty lint && yarn lint:eslint",
    "lint:eslint": "echo eslint && eslint '**/*.{ts,tsx}'",
    "lint:eslint:fix": "yarn lint:eslint --fix",
    "release:canary": "yarn release --canary --ci",
    "release": "node -r esbuild-register ./scripts/release.ts",
    "sandbox:extract": "yarn workspace @tamagui/kitchen-sink dev:web:extract",
    "sandbox:no-extract": "yarn workspace @tamagui/kitchen-sink dev:web",
    "sandbox:prod": "yarn workspace @tamagui/kitchen-sink dev:web:prod",
    "sandbox": "yarn workspace @tamagui/kitchen-sink dev:web:extract",
    "scripts:setup": "node -r esbuild-register ./scripts/setup.ts",
    "scripts:format": "node -r esbuild-register ./scripts/format.ts",
    "repair": "node -r esbuild-register ./scripts/repair.ts && update-ts-references",
    "profile": "node -r esbuild-register ./scripts/yarn-profile.ts",
    "starter:native": "yarn workspace @tamagui/starter native",
    "starter:prod": "yarn workspace @tamagui/starter web:prod && yarn workspace @tamagui/starter web:prod:serve",
    "starter": "yarn workspace @tamagui/starter web",
    "studio": "yarn workspace @tamagui/studio dev",
    "studio:tauri": "yarn workspace @tamagui/studio dev:tauri",
    "test:ci": "turbo test --concurrency=1",
    "test:demos": "yarn workspace @tamagui/demos test",
    "test": "CLEANUP=1 turbo run --concurrency=1 test",
    "typecheck": "tsc -b --preserveWatchOutput tsconfig.build.json",
    "typecheck:perf": "yarn workspace @tamagui/monorepo-test test",
    "upgrade:starters:free": "cd ../starter-free && yarn && yarn upgrade:tamagui",
    "upgrade:starters:expo-router": "cd code/starters/expo-router && yarn && yarn upgrade:tamagui",
    "upgrade:starters:remix": "cd code/starters/remix && yarn && yarn upgrade:tamagui",
    "upgrade:starters:simple-web": "cd code/starters/simple-web && yarn && yarn upgrade:tamagui",
    "upgrade:starters": "yarn upgrade:starters:free && yarn upgrade:starters:simple-web && yarn upgrade:starters:expo-router && yarn upgrade:starters:remix",
    "upgrade:vxrn": "yarn up '*vxrn*'@latest 'vxs'@latest",
    "vercel:build": "yarn build:js && cd code/old-site && yarn ci:build",
    "watch": "npm-run-all --parallel watch:ts watch:packages",
    "watch:packages": "SKIP_TYPES_INITIAL=1 ultra -r --no-pretty --concurrency 400 watch",
    "watch:js": "SKIP_TYPES=1 yarn watch:packages",
    "watch:ts": "node -r esbuild-register ./scripts/watch-ts.ts",
    "next-site": "yarn workspace @tamagui/next-site dev"
  },
  "profile": {
    "//": "run 'yarn profile x' to toggle it on/off",
    "react-19": {
      "applied": false,
      "resolutions": {
        "@react-three/fiber": "9.0.0-alpha.6",
        "react": "19.0.0-rc-fb9a90fa48-20240614",
        "react-dom": "19.0.0-rc-fb9a90fa48-20240614",
        "react-native-reanimated": "3.13.0-rc.1"
      }
    },
    "x": {
      "applied": false,
      "resolutions": {
        "@react-three/fiber": "9.0.0-alpha.6",
        "react": "19.0.0-rc-fb9a90fa48-20240614",
        "react-dom": "19.0.0-rc-fb9a90fa48-20240614",
        "react-native-reanimated": "3.13.0-rc.1",
        "create-vxrn": "portal:~/vxrn/packages/create-vxrn",
        "@vxrn/react-native-prebuilt": "portal:~/vxrn/packages/react-native-prebuilt",
        "@vxrn/safe-area": "portal:~/vxrn/packages/safe-area",
        "@vxrn/vite-flow": "portal:~/vxrn/packages/vite-flow",
        "@vxrn/vite-native-client": "portal:~/vxrn/packages/vite-native-client",
        "@vxrn/vite-native-hmr": "portal:~/vxrn/packages/vite-native-hmr",
        "@vxrn/vite-native-swc": "portal:~/vxrn/packages/vite-native-swc",
        "vxrn": "portal:~/vxrn/packages/vxrn",
        "vxs": "portal:~/vxrn/packages/vxs"
      }
    },
    "vxrn": {
      "applied": false,
      "resolutions": {
        "@vxrn/react-native-prebuilt": "portal:~/vxrn/packages/react-native-prebuilt",
        "@vxrn/safe-area": "portal:~/vxrn/packages/safe-area",
        "@vxrn/vite-flow": "portal:~/vxrn/packages/vite-flow",
        "@vxrn/vite-native-client": "portal:~/vxrn/packages/vite-native-client",
        "@vxrn/vite-native-hmr": "portal:~/vxrn/packages/vite-native-hmr",
        "@vxrn/vite-native-swc": "portal:~/vxrn/packages/vite-native-swc",
        "vxrn": "portal:~/vxrn/packages/vxrn",
        "vxs": "portal:~/vxrn/packages/vxs"
      }
    }
  },
  "importSort": {
    ".js, .jsx, .ts, .tsx": {
      "style": "module",
      "parser": "typescript"
    }
  },
  "dependencies": {
    "@biomejs/biome": "^1.7.3",
    "@manypkg/cli": "^0.19.1",
    "@playwright/test": "^1.45.2",
    "@types/eslint": "^8",
    "@typescript-eslint/eslint-plugin": "^6.19.1",
    "@typescript-eslint/parser": "^6.19.1",
    "dotenv-cli": "^7.4.2",
    "esbuild": "^0.23.0",
    "esbuild-register": "^3.5.0",
    "eslint": "^8.56.0",
    "eslint-parallel": "^1.2.1",
    "fs-extra": "^11.2.0",
    "import-sort-style-module": "^6.0.0",
    "json5": "^2.2.3",
    "npm-run-all": "^4.1.5",
    "p-map": "^5.5.0",
    "patch-package": "^8.0.0",
    "prompts": "2.1.0",
    "turbo": "^1.13.3",
    "typescript": "^5.5.2",
    "ultra-runner": "^3.10.5",
    "update-ts-references": "^3.3.0",
    "zx": "^7.2.3"
  }
}
